pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh 'pwd'  // 현재 경로 확인
                sh 'ls -al'  // 파일 목록 확인
            }
        }
        stage('Build and Deploy Notification Service') {
            steps {
                withCredentials([file(credentialsId: 'notification-application.yml', variable: 'application_yml')]) {
                    script {
                        dir('backend/notification-service') {
                            copyApplicationYaml(application_yml)
                            buildAndRunContainer('notification-service') // 내부 네트워크에서만 통신
                        }
                    }
                }
            }
        }
    }
}

// 공통 함수: application.yml 복사
def copyApplicationYaml(application_yml) {
    sh 'mkdir -p src/main/resources'
    sh "cp ${application_yml} src/main/resources/application.yml"
}

// 공통 함수: 컨테이너 중지 및 삭제
def stopAndRemoveContainer(containerName) {
    // 기존 eureka-server 컨테이너 중지 및 삭제
    sh """
    docker-compose -f docker-compose.yml stop notification-service || true
    docker-compose -f docker-compose.yml rm -f notification-service || true
    """
}

// 공통 함수: 컨테이너 빌드 및 실행
def buildAndRunContainer(serviceName) {
    stopAndRemoveContainer(serviceName)
    // 해당 컨테이너만 재시작
    sh """
    docker-compose -f docker-compose.yml build --no-cache notification-service
    docker-compose -f docker-compose.yml up -d --no-deps --build notification-service
    """
}
