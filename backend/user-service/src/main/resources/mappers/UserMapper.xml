<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.familring.userservice.model.dao.UserDao">

    <!-- 회원 정보 ResultMap -->
    <resultMap id="userInfo" type="com.familring.userservice.model.dto.UserDto">
        <result column="user_id" property="userId"/>
        <result column="user_kakao_id" property="userKakaoId"/>
        <result column="user_password" property="userPassword"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="user_birth_date" property="userBirthDate" javaType="java.time.LocalDate"/>
        <result column="user_zodiac_sign" property="userZodiacSign"/>
        <result column="user_role" property="userRole"/>
        <result column="user_face" property="userFace"/>
        <result column="user_color" property="userColor"/>
        <result column="user_emotion" property="userEmotion"/>
        <result column="user_fcm_token" property="userFcmToken"/>
        <result column="user_un_read_count" property="userUnReadCount"/>
        <result column="user_created_at" property="userCreatedAt"/>
        <result column="user_modified_at" property="userModifiedAt"/>
        <result column="user_is_lunar" property="userIsLunar" javaType="boolean"/>
        <result column="user_is_deleted" property="userIsDeleted" javaType="boolean"/>
        <result column="user_is_admin" property="userIsAdmin" javaType="boolean"/>
    </resultMap>

    <insert id="insertUser" parameterType="com.familring.userservice.model.dto.UserDto">
        INSERT INTO user (
            user_kakao_id, user_password, user_nickname, user_birth_date,
            user_zodiac_sign, user_role, user_face, user_color,
            user_emotion, user_un_read_count, user_created_at, user_modified_at,
            user_is_lunar, user_is_deleted, user_is_admin
        )
        VALUES (
                   #{userKakaoId}, #{userPassword}, #{userNickname}, #{userBirthDate},
                   #{userZodiacSign}, #{userRole}, #{userFace}, #{userColor},
                   #{userEmotion}, 0, NOW(), NOW(),
                   #{userIsLunar}, #{userIsDeleted}, #{userIsAdmin}
               )
    </insert>

    <select id="findUserByUserKakaoId" resultMap="userInfo">
        SELECT *
        FROM user
        WHERE user_kakao_id = #{userKakaoId}
    </select>

    <select id="findUserByUserId" resultMap="userInfo">
        SELECT *
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="existsUserByUserKakaoId" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM user
        WHERE user_kakao_id = #{userKakaoId}
    </select>

    <update id="updateUserFcmTokenByUserId">
        UPDATE user
        SET user_fcm_token = #{fcmToken}, user_modified_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserEmotionByUserId">
        UPDATE user
        SET user_emotion = #{userEmotion}, user_modified_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserNicknameByUserId">
        UPDATE user
        SET user_nickname = #{userNickname}, user_modified_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserColorByUserId">
        UPDATE user
        SET user_color = #{userColor}, user_modified_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserFaceByUserId" >
        UPDATE user
        SET user_face = #{userNewFace}, user_modified_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserUnReadCountByUserId">
        UPDATE user
        SET user_un_read_count = user_un_read_count + #{amount}, user_modified_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="deleteUser" parameterType="com.familring.userservice.model.dto.request.UserDeleteRequest">
        UPDATE user
        SET user_kakao_id = #{afterUserKakaoId}, user_password = #{userPassword}, user_nickname = #{userNickname}, user_role = #{userRole}, user_face = #{userFace},
            user_emotion = #{userEmotion}, user_fcm_token = #{userFcmToken}, user_modified_at = NOW(), user_is_deleted = #{userIsDeleted}
        WHERE user_id = #{userId}
    </update>
</mapper>