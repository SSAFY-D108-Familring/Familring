pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build and Deploy Classification Service') {
            steps {
                withCredentials([file(credentialsId: 'classification-service.env', variable: 'ENV_FILE')]) {
                    script {
                        dir('backend/classification-service') {
                            copyApplicationEnv(ENV_FILE)
                            buildAndRunContainer('classification-service', 0)
                        }
                    }
                }
            }
        }
    }
}

// 공통 함수
def copyApplicationEnv(env) {
    sh "cp ${env} .env"
}

// 공통 함수: 컨테이너 중지 및 삭제
def stopAndRemoveContainer(containerName) {
    def container = sh(script: "docker ps -a --filter 'name=${containerName}' --format '{{.ID}}'", returnStdout: true).trim()
    if (container) {
        sh "docker stop ${container}"
        sh "docker rm ${container}"
    }
}

// 공통 함수: 컨테이너 빌드 및 실행
def buildAndRunContainer(serviceName, port) {
    stopAndRemoveContainer(serviceName)

    sh "docker build -t ${serviceName} ."
    sh "docker run --name -d -p ${port}:${port} ${serviceName}"
}
