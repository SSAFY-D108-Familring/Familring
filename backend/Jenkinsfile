pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('application.yml download') {
            steps {
                withCredentials([file(credentialsId: 'config-application.yml', variable: 'config_application_yml')]) {
                    script {
                        // 디렉토리가 없는 경우 생성
                        sh 'mkdir -p config-service/src/main/resources'

                        // config-application.yml 복사
                        sh 'cp $config_application_yml config-service/src/main/resources/application.yml'
                    }
                }
            }
        }
        stage('Build and Deploy Services') {
            parallel {
                stage('Build and Deploy Config Server') {
                    when {
                        changeset "config-service/**"
                    }
                    steps {
                        script {

                            // 기존 config-service 컨테이너 중지 및 삭제
                            sh """
                            docker-compose -f docker-compose.yml stop config-service || true
                            docker-compose -f docker-compose.yml rm -f config-service || true
                            """

                            // 해당 컨테이너만 재시작
                            sh """
                            docker-compose -f docker-compose.yml build --no-cache config-service
                            docker-compose -f docker-compose.yml up -d --no-deps --build config-service
                            """
                        }
                    }
                }
                stage('Build and Deploy Discovery Server') {
                    when {
                        changeset "discovery-service/**"
                    }
                    steps {
                        script {

                            // 기존 eureka-server 컨테이너 중지 및 삭제
                            sh """
                            docker-compose -f docker-compose.yml stop discovery-service || true
                            docker-compose -f docker-compose.yml rm -f discovery-service || true
                            """

                            // 해당 컨테이너만 재시작
                            sh """
                            docker-compose -f docker-compose.yml build --no-cache discovery-service
                            docker-compose -f docker-compose.yml up -d --no-deps --build discovery-service
                            """
                        }
                    }
                }
                stage('Build and Deploy Api Gateway Server') {
                    when {
                        changeset "api-gateway/**"
                    }
                    steps {
                        script {

                            // 기존 notification-server 컨테이너 중지 및 삭제
                            sh """
                            docker-compose -f docker-compose.yml stop api-gateway || true
                            docker-compose -f docker-compose.yml rm -f api-gateway || true
                            """

                            // 해당 컨테이너만 재시작
                            sh """
                            docker-compose -f docker-compose.yml build --no-cache api-gateway
                            docker-compose -f docker-compose.yml up -d --no-deps --build api-gateway
                            """
                        }
                    }
                }
            }
        }
    }
}

